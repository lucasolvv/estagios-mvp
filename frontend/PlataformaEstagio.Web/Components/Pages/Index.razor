@page "/"
@using System.ComponentModel.DataAnnotations
@using MudBlazor
@using PlataformaEstagios.Communication.Requests
@inject ISnackbar Snackbar
@inject NavigationManager Nav
@inject PlataformaEstagio.Web.Components.Services.Auth.IAuthService Auth

<MudContainer MaxWidth="MaxWidth.ExtraLarge">
    <MudGrid Justify="Justify.Center" AlignItems="AlignItems.Center" Class="mt-2">
        <MudItem xs="12" md="6">
            <MudPaper Class="pa-6">
                <MudStack>
                    <MudText Typo="Typo.h4" Color="Color.Secondary" Class="font-weight-bold">
                        Bem-vindo ao StartCarreira
                    </MudText>
                    <MudText Typo="Typo.subtitle2" Class="text-medium-emphasis">
                        Acesse sua conta para acompanhar vagas e candidaturas.
                    </MudText>

                   
                    <EditForm Model="_model" OnValidSubmit="HandleLogin">
                        <MudTextField @bind-Value="_model.EmailOrNickname" Label="Usuário ou e-mail"
                                      For="@(() => _model.EmailOrNickname)" Required="true" Immediate="true" />

                        <MudTextField @bind-Value="_model.Password" Label="Senha"
                                      For="@(() => _model.Password)" InputType="InputType.Password" Required="true" Immediate="true" />

                        <MudButton ButtonType="ButtonType.Submit" Disabled="_isSubmitting"
                                   Variant="Variant.Filled" Color="Color.Primary"
                                   Class="mt-2" FullWidth="true">
                            @(_isSubmitting ? "Entrando.." : "Entrar")
                        </MudButton>
                    </EditForm>

                    <MudDivider Class="my-2" />
                    <MudText Typo="Typo.body2">
                        Não possui cadastro?
                        <MudLink Href="/Register">Cadastre-se</MudLink>
                    </MudText>
                </MudStack>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    private MudForm? _form;
    private bool _isSubmitting;
    private RequestLoginJson _model = new();

    private async Task HandleLogin()
    {
        if (_isSubmitting) return;
        _isSubmitting = true;
        try
        {
            var ok = await Auth.LoginAsync(_model);
            if (!ok)
            {
                Snackbar.Add("Usuário ou senha inválidos.", Severity.Error);
                return;
            }

            //Snackbar.Add("Login realizado com sucesso!", Severity.Success);
            Nav.NavigateTo("/dashboard", forceLoad: true);
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Erro inesperado: {ex.Message}", Severity.Error);
        }
        finally
        {
            _isSubmitting = false;
            StateHasChanged();
        }
    }
}
